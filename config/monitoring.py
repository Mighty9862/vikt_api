import time
import logging
import psutil
import os
import colorama
from colorama import Fore, Style
from config.logger import setup_logging
import asyncio

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama –¥–ª—è Windows
colorama.init()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
class ColoredFormatter(logging.Formatter):
    """–§–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è —Ü–≤–µ—Ç–Ω—ã—Ö –ª–æ–≥–æ–≤"""
    
    def format(self, record):
        # –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç–æ–≤—É—é –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        if record.levelno >= logging.ERROR:
            color = Fore.RED
        elif record.levelno >= logging.WARNING:
            color = Fore.YELLOW
        elif record.levelno >= logging.INFO:
            # –û—Å–æ–±–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è FastAPI –ª–æ–≥–æ–≤
            if 'fastapi' in record.name:
                if "GET" in str(record.msg) or "POST" in str(record.msg):
                    color = Fore.MAGENTA  # –í—ã–¥–µ–ª—è–µ–º HTTP –∑–∞–ø—Ä–æ—Å—ã –º–∞–≥–µ–Ω—Ç–æ–π
                else:
                    color = Fore.BLUE     # –û—Å—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ FastAPI —Å–∏–Ω–∏–º
            else:
                color = Fore.CYAN
        else:
            color = Fore.GREEN
            
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ª–æ–≥–∞
        if 'fastapi' in record.name:
            record.msg = f"{color}[API] {record.msg}{Style.RESET_ALL}"
        else:
            record.msg = f"{color}[–ò–ì–†–û–í–û–ô –°–ï–†–í–ï–†] {record.msg}{Style.RESET_ALL}"
        return super().format(record)

async def start_monitoring_task():
    """–ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    logger = logging.getLogger("–ú–û–ù–ò–¢–û–†–ò–ù–ì")
    
    while True:
        try:
            stats = await get_system_stats()
            from presentation.websockets.WebSocketRouter import active_players, active_spectators
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
            player_count = len(active_players) if active_players is not None else 0
            spectator_count = len(active_spectators) if active_spectators is not None else 0
            total_connections = player_count + spectator_count
            
            logger.info(f"""
                        ============= –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ï–†–í–ï–†–ê =============
–ê–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä–æ–∫–∏: {player_count}
–ê–∫—Ç–∏–≤–Ω—ã–µ –∑—Ä–∏—Ç–µ–ª–∏: {spectator_count}
–í—Å–µ–≥–æ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {total_connections}

–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:
    ‚îú‚îÄ‚îÄ –ó–∞–≥—Ä—É–∑–∫–∞ –¶–ü: {stats['cpu_percent']}%
    ‚îú‚îÄ‚îÄ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: {stats['memory_percent']}%
    ‚îú‚îÄ‚îÄ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ç–æ–∫–∏: {stats['active_threads']}
    ‚îî‚îÄ‚îÄ –û—Ç–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã: {stats['open_files']}

–°–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:
    ‚îú‚îÄ‚îÄ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ: {stats['connections_detail']['ESTABLISHED']} (–∞–∫—Ç–∏–≤–Ω—ã–µ WebSocket –∏ HTTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)
    ‚îú‚îÄ‚îÄ –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ: {stats['connections_detail']['LISTEN']} (–æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞)
    ‚îú‚îÄ‚îÄ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è: {stats['connections_detail']['TIME_WAIT']} (—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è)
    ‚îú‚îÄ‚îÄ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –∫–ª–∏–µ–Ω—Ç–æ–º: {stats['connections_detail']['CLOSE_WAIT']} (—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∫–ª–∏–µ–Ω—Ç–∞)
    ‚îî‚îÄ‚îÄ –ü—Ä–æ—á–∏–µ: {stats['connections_detail']['OTHER']} (—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö TCP)

–í—Å–µ–≥–æ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {stats['active_connections']}
=============================================""")
        except ImportError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ WebSocket –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {e}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await asyncio.sleep(60)

def setup_monitoring(logger=None):
    if logger is None:
        logger = setup_logging()
        
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    formatter = ColoredFormatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    
    # –°–æ–∑–¥–∞–µ–º handler –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    console_handler = logging.StreamHandler()
    console_handler.setFormatter(formatter)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    monitoring_logger = logging.getLogger("–ú–û–ù–ò–¢–û–†–ò–ù–ì")
    monitoring_logger.setLevel(logging.INFO)
    monitoring_logger.addHandler(console_handler)
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ SQL –ª–æ–≥–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é
    logging.getLogger("sqlalchemy").handlers = []
    logging.getLogger("sqlalchemy").propagate = False
    logging.getLogger("sqlalchemy.engine").handlers = []
    logging.getLogger("sqlalchemy.engine").propagate = False

    # –ë–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ SQLAlchemy
    for logger_name in [
        "sqlalchemy",
        "sqlalchemy.engine",
        "sqlalchemy.engine.base.Engine",
        "sqlalchemy.dialects",
        "sqlalchemy.pool",
        "sqlalchemy.orm",
        "sqlalchemy.engine.Engine"
    ]:
        logger = logging.getLogger(logger_name)
        logger.handlers = []
        logger.propagate = False
        logger.disabled = True
        logger.setLevel(logging.CRITICAL)

    # –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ª–æ–≥–∏ FastAPI –∏ uvicorn
    for logger_name in [
        "fastapi",
        "uvicorn",
        "uvicorn.access",
        "uvicorn.error"
    ]:
        logger = logging.getLogger(logger_name)
        logger.handlers = []
        logger.propagate = False
        logger.disabled = True
        logger.setLevel(logging.CRITICAL)
    
    return logger

async def get_system_stats():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã"""
    process = psutil.Process(os.getpid())
    connections = process.connections()
    
    connections_detail = {
        'ESTABLISHED': 0,
        'LISTEN': 0,
        'TIME_WAIT': 0,
        'CLOSE_WAIT': 0,
        'OTHER': 0
    }
    
    for conn in connections:
        status = conn.status
        if status in connections_detail:
            connections_detail[status] += 1
        else:
            connections_detail['OTHER'] += 1
    
    return {
        'cpu_percent': process.cpu_percent(),
        'memory_percent': process.memory_percent(),
        'active_threads': process.num_threads(),
        'open_files': len(process.open_files()),
        'active_connections': len(connections),
        'connections_detail': connections_detail
    }

async def start_monitoring():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    logger = logging.getLogger(__name__)
    logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")  # –õ–æ–≥ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    asyncio.create_task(start_monitoring_task())

    

"""
–û–ø–∏—Å–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ:

1. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:
- –ê–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö WebSocket –∏–≥—Ä–æ–∫–æ–≤
- –ê–∫—Ç–∏–≤–Ω—ã–µ –∑—Ä–∏—Ç–µ–ª–∏ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö WebSocket –∑—Ä–∏—Ç–µ–ª–µ–π  
- –í—Å–µ–≥–æ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π - —Å—É–º–º–∞ –∏–≥—Ä–æ–∫–æ–≤ –∏ –∑—Ä–∏—Ç–µ–ª–µ–π

2. –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:
- –ó–∞–≥—Ä—É–∑–∫–∞ –¶–ü - –ø—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ —Ç–µ–∫—É—â–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ - –ø—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è RAM —Ç–µ–∫—É—â–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º
- –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
- –û—Ç–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤—ã—Ö –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤

3. –°–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:
- ESTABLISHED - –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (WebSocket –∏ —Ç–µ–∫—É—â–∏–µ HTTP –∑–∞–ø—Ä–æ—Å—ã)
- LISTEN - –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
- TIME_WAIT - —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–∫—Ä—ã—Ç–∏—è (–æ–±—ã—á–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ HTTP –∑–∞–ø—Ä–æ—Å—ã)
- CLOSE_WAIT - —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –∫–ª–∏–µ–Ω—Ç–æ–º
- OTHER - –ø—Ä–æ—á–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è TCP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π

–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –ª–æ–≥–æ–≤:
- –ö—Ä–∞—Å–Ω—ã–π (RED) - –æ—à–∏–±–∫–∏ (ERROR)
- –ñ–µ–ª—Ç—ã–π (YELLOW) - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (WARNING) 
- –ü—É—Ä–ø—É—Ä–Ω—ã–π (MAGENTA) - HTTP –∑–∞–ø—Ä–æ—Å—ã FastAPI
- –°–∏–Ω–∏–π (BLUE) - –ø—Ä–æ—á–∏–µ –ª–æ–≥–∏ FastAPI
- –ì–æ–ª—É–±–æ–π (CYAN) - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (INFO)
- –ó–µ–ª–µ–Ω—ã–π (GREEN) - –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (DEBUG)

–ü—Ä–µ—Ñ–∏–∫—Å—ã –ª–æ–≥–æ–≤:
[API] - –¥–ª—è –ª–æ–≥–æ–≤ FastAPI
[–ò–ì–†–û–í–û–ô –°–ï–†–í–ï–†] - –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤

–û—Ç–∫–ª—é—á–µ–Ω—ã –ª–æ–≥–∏:
- SQLAlchemy (–≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã)
- FastAPI (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ)
- Uvicorn (access –∏ error)
""" 